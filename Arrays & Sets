// Arrays
  // Task: Create an empty arrays named subwayAdult and subwayAdult of the type Int, then print them out.

  var subwayAdult = [Int]()      // RESULT: []
    print(subwayAdult)                      []
  var subwayChild = [Int]()
    print(subwayChild)

// Creating an Array Literal
  // Task #1: Create an array named subwayAdult and initialize it with 800, 1200, and 1500.

  var subwayAdult = [800, 1200, 1500]
    print(subwayAdult) 

  /* Task #2: Initialize subwayChild with 400, 600, and 750. This time, be explicit with the type, then print it out. */
                                                  // RESULT: [800, 1200, 1500]
  var subwayChild: [Int] = [400, 600, 750]                   [400, 600, 750]
    print(subwayChild)

// Index 
 // Task: Print the current temperature using its index.

  var temperature: [Int] = [66, 68, 72, 76, 80, 82, 85, 85, 84, 82, 81, 78, 74, 73, 72, 71, 70, 69, 68, 65, 63, 62, 61, 63]

  print(temperature[0])        // RESULT: 66

// The ".count" Property
  // Task: Print the size of the array using .count.        // RESULT: 20

  var countingRhyme = ["eeny", "meeny", "miny", "moe", "catch", "a", "coder", "by", "the", "toe", "if", "they", "debug", "let", "them", "go", "eeny", "meeny", "miny", "moe"]

  print(countingRhyme.count)

// The ".append" Method
  // Task #1: Add one more item to the resolutions array using .append().

    var resolutions = ["play more music üé∏",
                   "read more books üìö",
                   "drink more water üíß"]
    resolutions.append("Master Swift Programming")

  // Task #2: Add more to the resolutions array using +=.      // RESULT: ["play more music üé∏", "read more books üìö", "drink more water üíß", "Master Swift Programming", "Master iOS Programming", "Land my First Development Job"]

    resolutions += ["Master iOS Programming", "Land my First Development Job"]
    print(resolutions)

// The .insert() and .remove() Methods.
  // Task #1: Insert "GTG" at index 3.

    var dna = ["ATG", "ACG", "GAA", "TAT"]      // RESULT: ["ACG", "GAA", "GTG", "TAT"]
    dna.insert("GTG", at: 3)

  // Task #2: Remove the item at index 0.

    dna.remove(at: 0)
    print(dna)

// Iterating Over an Array
  // Task #1: create a variable called total of type Double and give it a value of 0.0.

    var receipt = [12.00, 3.75, 6.50, 19.99]
    var total: Double = 0.0
      for item in receipt {
        total += item
      }
  
  // Task #2: Change the value of total by multiplying itself by 1.08875.      // RESULT: 45.9888

    total = total * 1.08875
    print(total)

// Module Optional Challenge
  // Task: Write a Swift program to find the sum of even numbers and the product of odd numbers in an array.

    var list = [2, 4, 3, 6, 1, 9]      // RESULT: Sum of even numbers is 12
    var totalEven = 0                             Product of odd numbers is 27
    var productOdd = 1
      for item in list {
        if item % 2 == 0 {
          totalEven += item
        } else {
          productOdd *= item
        }
      }
    print("Sum of even numbers is \(totalEven)")
    print("Product of odd numbers is \(productOdd)")

// Arrays Module Project #1: Make a Mixtape 101
  // Write a program that holds the ultimate playlist of music in a Swift array.
    // Task #1: Write a comment at the top of the program with the theme of your mixtape.
      // The theme of my mixtake is Tokyo 90's Lofi.
        print(".------------------------.")
        print("| Tokyo Lofi 90's - 90 min |")
        print("|     __  ______  __     |")
        print("|    (  )|).....|(  )    |")
        print("|    (__)|)_____|(__)    |")
        print("|    ________________    |")
        print("|___/_._o________o_._\\___|")
    
    // Task #2: Declare an array called mixtape that stores String values.
        
        var mixtape = [String]()
   
    /* Task #3: Take some time to find ten or more songs that you want to add the playlist. As you are finding them, use .append() to add them to the mixtape array. */

        mixtape.append("Whispering Woods - Unknown")
        mixtape.append("Nostalgic Nights - Unknown")
        mixtape.append("Tranquil Twilight - Unknown")
        mixtape.append("Sunset Memories - Unknown")
        mixtape.append("Subtle Serenity - Unknown")
        mixtape.append("Velvet Veil - Unknown")
        mixtape.append("Soft Shadows - Unknown")
        mixtape.append("Serene Soundscape - Unknown")
        mixtape.append("Serenade of Silence - Unknown")
        mixtape.append("Reflections of Raindrops - Unknown")

    /* Task #4: Use the .count property to determine the number of songs in your mixtape. Wrap it in a print() statement to output that number. */

        print(mixtape.count)

    // Task #5: Use the .remove() method to take out one or two of the songs.

        mixtape.remove(at: 0)
        mixtape.remove(at: 6)                                                                // RESULT: .------------------------.
                                                                                                        | Tokyo Lofi 90's - 90 min |
    // Task #6: Use .remove() and .insert() methods to delete and add more tracks.                      |     __  ______  __     |
                                                                                                        |    (  )|).....|(  )    |
        mixtape.remove(at: 1)                                                                           |    (__)|)_____|(__)    |
        mixtape.remove(at: 4)                                                                           |    ________________    |
        mixtape.remove(at: 5)                                                                           |___/_._o________o_._\___|                       
        mixtape.insert("Nostalgic Nights - Unknown", at: 4)                                             10
        mixtape.insert("Ambient Aura - Unknown", at: 5)                                                 Nostalgic Nights - Unknown
        mixtape.insert("Reflections of Raindrops - Unknown", at: 1)                                     Reflections of Raindrops - Unknown
        mixtape.insert("Dreamy Vibes - Unknown", at: 3)                                                 Ethereal Echo - Unknown
        mixtape.insert("Ethereal Echo - Unknown", at: 2)                                                Sunset Memories - Unknown
                                                                                                        Dreamy Vibes - Unknown
    // Task #7: print out the tracklist using a for-in loop                                             Subtle Serenity - Unknown
                                                                                                        Velvet Veil - Unknown                                                                        
        for item in mixtape {                                                                           Nostalgic Nights - Uknown
          print(item)                                                                                   Ambient Aura - Unknown
        }                                                                                               Serenade of Silence - Unknown

// Arrays Module Project #2: Palindrome
  // Objective: Write a program that checks whether or not an array contains a palindrome.
    /* Task #1: create an array named text with the value: ["h", "e", "l", "l", "o"] */

      var text = ["h", "e", "l", "l", "l", "o"] 

    // Task #2: declare an empty array called reversed of type String. 

      var reversed = [String]()                                                // RESULT: This is not a palindrom!
  
    /* Task #3: create a counter variable that starts at 1 less than the size of text using the .count property. */

      var counter = text.count - 1
  
    /* Task #4: create a while loop that has the condition of counter greater than or equal to 0. 
    Before the decrement of the counter, add a line of code that appends the character in text at index counter to the end of reversed array. */

      while counter >= 0 {
        reversed.append(text[counter])
        counter = counter - 1
      }

    /* Task #5: Create a conditional that prints out ‚ÄúWe have a palindrome!‚Äù if text equals to reversed. */

      if text == reversed {
        print("We have a palindrome!")
      } else {
        print("This is not a palindrom!")

// Arrays Module Project #3: Caeser's Cipher
  // /* Objective: Write a program that encrypts a message by shifting each letter three places to the right. */

    var alphabet: [Character] = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"] 

    var secretMessage = "Codecademy".lowercased()

    var message = Array(secretMessage)
  
      for i in 0 ..< message.count {                // RESULT: ["f", "r", "g", "h", "f", "d", "g", "h", "p", "b"]
        for j in 0 ..< alphabet.count {
          if message[i] == alphabet[j] {
            message[i] = alphabet[(j+3) % 26]
            break
          }
        }
      }
    print(message)

// Creating a Set
  /* Task #1: Create an empty set called consonants with Character type values. */

  var consonants = Set<Character>()                                                    // RESULT: ["U", "O", "I", "E", "A"]

  /* Task #2: Create a second set called vowels that contains the following values: "A", "E", "I", "O", "U". Then, Output vowels to the terminal. */

  var vowels: Set = ["A", "E", "I", "O", "U"]
  print(vowels)

// .count and .isEmpty Properties
  /* Task #1: Create an if statement with a conditional that checks if sockDrawer is empty using .isEmpty.
        - Inside the if statement, print the output "Time to add some more socks!". */
      
  /* Task #2: Underneath the if statement, create an else statement. Then, print the following message inside the body of the else statement: We have [X] pairs of socks. */

      var sockDrawer: Set = ["Red Polka Dots", "Blue Stripes", "Plain Whites"]        // RESULT: We have 3 pairs of socks.
        if sockDrawer.isEmpty {
          print("Time to add some more socks!")
        } else {
          print("We have \(sockDrawer.count) pairs of socks.")
        }
