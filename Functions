// Defining a Function
  /* Task #1: Define a function, directionsToTimesSq() that will not return any values. */
  /* Task #2: Within the body of the function, use 4 print() statements to output the following directions:
      - "Walk 4 mins to 34th St Herald Square train station."
      - "Take the Northbound N, Q, R, or W train 1 stop."
      - "Get off the Times Square 42nd Street stop."
      - "Take lots of pictures! üì∏" */

    func directionsToTimesSq() -> Void {
      print("Walk 4 mins to 34th St Herald Square train station.")
      print("Take the Northbound N, Q, R, or W train 1 stop.")
      print("Get off the Times Square 42nd Street stop.")
      print("Take lots of pictures! üì∏")
    }

// Calling a Function
  */ Task #1: define a function, mySpecialRecipe(), that will hold the instructions for a recipe of your choice.

    func mySpecialRecipe() {
     print("First, toast the bagel for 2 minutes on the high setting.")
     print("Next, remove the bagel from the toaster and seperate it into 2 pieces.")
     print("Spread 2 table spoons of peanut butter on each side of the bagel.")
     print("Cut a banana into 10 pieces.")                                                      // RESULT: First, toast the bagel for 2 minutes on the high setting.                                                                 
     print("Set 5 pieces of banana on each side of the bagel.")                                            Next, remove the bagel from the toaster and seperate it into 2 pieces.
     print("Enjoy your toasted peanut butter & banana bagel!")                                             Spread 2 table spoons of peanut butter on each side of the bagel.
    }                                                                                                      Cut a banana into 10 pieces. 
                                                                                                           Set 5 pieces of banana on each side of the bagel.
// Task #2: Below the function definition, call the function and see your recipe in the terminal.          Enjoy your toasted peanut butter & banana bagel!
    
    mySpecialRecipe()

// Returning a Value
  /* Task #1: declare a function, findBMI() that returns a Double value. */
  /* Task #2: Translate the right side of the BMI formula into code, and return it from the function. */
  

    let weight = 70.0 // in Kilograms
    let height = 1.73 // in Meters

    func findBMI() -> Double {
      return weight / (height * height)                            // RESULT: 23.38868655818771
    }

  /* Task #3: Call the function and wrap it in a print() statement to see its output. */

    print(findBMI())

// Parameters & Arguments
  /* Task #1: define a function, findCircumference(), that will accept a diameter parameter of type Double, and return a Double type.
      - Within findCircumference(), use the return keyword to return the expression, 3.14 * diameter.   */

    func findCircumference(diameter: Double) -> Double {
      return 3.14 * diameter
    }
  
  /* Task #2: Call the function and pass in a number argument for the diameter parameter. Save this function call in the variable, result. Then, on the following line, print the value of result. */

    var result = findCircumference(diameter: 32.5)            // RESULT: 102.05
    print(result)

// Multiple Parameters
 /* Task #1: set up a function, timeToDestination(), that will use an airplane‚Äôs speed and total distance to determine the duration of a flight.
      - timeToDestination() should accept distance and speed parameters of type Int.
      - timeToDestination() should return a value of the type Int. */
  /* Task #2: Within the function body, declare the constant, time and use the following formula to assign it a mathematical expression that determines the length of a flight:
      - time = distance /speed
      - Following the variable declaration, return time. */

      func timeToDestination(distance: Int, speed: Int) -> Int {
        let time = distance / speed
        return time
      } 
  
  /* Task #3: Call the function and pass in the following information about the flight:                      // RESULT: 12
      - The distance between Dubai and New York is 6836 miles. Pass in 6836 as the argument for distance.
      - The average cruising speed is 560 miles per hour. Pass in 560 as the argument for speed.
      - Wrap the function call in a print() statement. */

      print(timeToDestination(distance: 6836, speed: 560))

// Argument Labels
 /* Task #1: Create a variable named friendsList of type [String] and assign it to an empty array. */

    var friendsList = [String]()

  /* Task #2: Write a function named addFriend. It should take in a parameter called friendName of type String, that has an argument label called named. */
  /* Task #3: In the body of addFriend(named:) add logic that appends the parameter friendName to the friendsList variable. */

    func addFriend(named friendName: String) {
      friendsList.append(friendName)
    }
  /* Task #4: Call the addFriend(named:) method three times to add the following friends: ‚ÄúAlice‚Äù, ‚ÄúBob‚Äù, and ‚ÄúCindy‚Äù. */

    addFriend(named: "Alice")
    addFriend(named: "Bob")
    addFriend(named: "Cindy")

  // Task #5: Print the contents of the friendsList variable.      // RESULT: ["Alice", "Bob", "Cindy"]

    print(friendsList)

